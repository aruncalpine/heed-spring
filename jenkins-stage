#!/usr/bin/env groovy

pipeline {
    agent any

    stages {
        stage('Repo download') {
            steps {
                checkout scm
            }
        }
        
        stage('Build') {
            steps {
                script {
                    withCredentials([
                        string(credentialsId: 'BACKENDUSERNAME', variable: 'ConnectionUsername'),
                        string(credentialsId: 'BACKENDPASSWORD', variable: 'ConnectionPassword'),
                        string(credentialsId: 'BACKENDDBNAME', variable: 'ConnectionDBname'),
                        string(credentialsId: 'BACKENDHOST', variable: 'ConnectionHost')
                    ]) {
                        sh '''
                            set -x
                            APP_PATH=$(find /var/lib/jenkins/workspace/$JOB_NAME/src/* -type f | egrep "application.properties")
                            cat $APP_PATH
                        '''
                        docker.image("arunr039/maven-3.8").inside() {
                            sh '''
                                mvn clean install -DskipTests
                            '''
                        }
                    }
                }
            }
        }
             
        stage('Archive') {
            steps {
                archiveArtifacts artifacts: 'target/*.war', allowEmptyArchive: true
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    withCredentials([
                        string(credentialsId: 'PORT22', variable: 'PORT'),
                        string(credentialsId: 'HOST_IP_ADDRESS', variable: 'DEPLOY_HOST'),
                        usernameColonPassword(credentialsId: 'HOSTCRED', variable: 'CRED')
                    ]) {
                        sh '''
                            set -x
                            set -e
                            DATE=$(date +%F-%M)
                            mkdir -pv /opt/wildfly/old-war/${DATE}
                            mkdir -pv /opt/wildfly/current-war
                            for i in $(ls /opt/wildfly/current-war/); do
                                cd /opt/wildfly/current-war/
                                mv $i /opt/wildfly/old-war/${DATE}/
                            done
                            
                            systemctl restart wildfly.service
                            sleep 25
                            /opt/wildfly/bin/jboss-cli.sh --connect --command=deployment-info | grep -v springbootwildfly
                            [[ $? -eq 0 ]] && /opt/wildfly/bin/jboss-cli.sh --connect --command="undeploy springbootwildfly.war"
                            sleep 25
                            /opt/wildfly/bin/jboss-cli.sh --connect --command="deploy /opt/wildfly/current-war/springbootwildfly.war --force" && \
                            echo "New war deployed"
                            sleep 25
                            /opt/wildfly/bin/jboss-cli.sh --connect --command=deployment-info
                            
                            scp -o "StrictHostKeyChecking no" -P${PORT} target/springbootwildfly*.war root@${DEPLOY_HOST}:/opt/wildfly/current-war/springbootwildfly.war
                        '''
                    }
                }
            }
        }
    }
    
    post {
        always {
            echo 'Completed!!!!'
        }
        failure {
            currentBuild.result = 'FAILURE'
        }
    }
}
